import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'com.google.protobuf' version '0.8.13'
    id 'idea'
    id 'maven-publish'
}

def tag = property("CI_TAG") ? "${property("CI_TAG")}-${property("CI_COMMIT_SHORT_SHA")}-RELEASE" : null
def buildVersion = property("CI_CURRENT_BRANCH") ? "${property("CI_CURRENT_BRANCH")}-${property("CI_COMMIT_SHORT_SHA")}-SNAPSHOT" : "local-${new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date())}-SNAPSHOT"

group = 'dev.xbase'
version = tag ? tag : buildVersion
print "Working version: " + version
repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    api 'io.grpc:grpc-protobuf:1.57.2'
    api 'io.grpc:grpc-stub:1.57.2'
    api 'io.grpc:grpc-netty:1.57.2'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'com.google.protobuf:protobuf-java-util:3.24.2'
}

protobuf{
    protoc {artifact = "com.google.protobuf:protoc:3.13.0"}
    plugins{
        grpc {artifact = "io.grpc:protoc-gen-grpc-java:1.31.1"}
    }
    generateProtoTasks{
        all()*.plugins {grpc {}}
    }
    // default proto plugin generate stub in build folder
    // change the stub generate folder
    //generatedFilesBaseDir = "$projectDir/src/generated"
}

sourceSets{
    main{
        proto{
            srcDirs '../files'
        }
        java{
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'

        }
    }
}

jar {
    manifest {
        attributes(
                'Manifest-Version': tag ? "${tag}-RELEASE" : "${buildVersion}-SNAPSHOT",
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                // 'Build-Revision' : versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}
//
//task sourcesJar(type: Jar) {
//    archiveClassifier = 'sources'
//    from sourceSets.main.allJava
//}
//
//task javadocJar(type: Jar) {
//    archiveClassifier = 'javadoc'
//    from javadoc.destinationDir
//}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        maven(MavenPublication) {
            groupId = "dev.xbase"
            artifactId = "platform-protos"
            version = version
            from components.java
        }
    }
}